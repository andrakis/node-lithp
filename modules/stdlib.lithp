(
	(var Modules (list
		assert       % Assertion functions
		bignum       % 
		buffer       % Provide some buffer-related functions
		cache        % Function result cache
		class        % Very basic class module
		file         % File IO
		lists        % List related functions
		math         % Math functions
		match
		pivot
		random       % Random number functions
		readline     % 
		switch       % The classic switch function
		stream
		symbols      % Symbol functions
	))
	(def import-modules #List :: (
		(if (!= 0 (length List)) (
			(try (
				(import (head List))
			) (catch # :: (
				(print "Failed to import " (head List))
			)))
			(recurse (tail List))
		))
	))
	(import-modules Modules)
)
