% A work-in-progress entry for a Codegolf challenge:
% http://codegolf.stackexchange.com/questions/53100/integral-triangles-and-integral-medians
(
	(import lists)
	(import math)

	(def isSquare #V :: (
		(var S (parse-int (+ (sqrt V) 0.5)))
		% (print "isSquare - V:" V " S: " S ", S*S: " (* S S))
		(== (* S S) V)
	))

	(var MedianCache (dict))
	(def isMedian #V :: (
		(if (dict-present MedianCache V) (
			(dict-get MedianCache V)
		) (
			% (print "isMedian " V ", % 4=" (@ V 4))
			(var Result (and (== 0 (@ V 4)) (isSquare (round (/ V 4)))))
			(dict-set MedianCache V Result)
			(Result)
		))
	))

	(def main #N :: (
		(var NTri 0)
		(each (seq 1 N) (scope #C :: (
			(each (seq (round (/ (+ C 1) 2)) C) (scope #B :: (
				(each (seq (+ (- C B) 1) B) (scope #A :: (
					% (print "A: " A " B: " B " C: " C)
					(var Test3 (+ (* A A) (* B B)))
					(var Test3 (- (* 2 Test3) (* C C)))
					(if (isMedian Test3) (
						(set NTri (+ NTri 1))
					) (
						(var Test2 (+ (* A A) (* C C)))
						(var Test2 (- (* 2 Test2) (* B B)))
						(if (isMedian Test2) (
							(set NTri (+ NTri 1))
						) (
							(var Test1 (+ (* B B) (* C C)))
							(var Test1 (- (* 2 Test1) (* A A)))
							(if (isMedian Test1) (
								(set NTri (+ NTri 1))
							))
						))
					))
				)))
			)))
		)))
		(NTri)
	))

	(print (main 20))
)
