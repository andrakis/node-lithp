% Demonstrate reading a file using node builtins
%
(
	% The require/1 function requires Platform V1 functionality.
	% This will load it if not already loaded with the '-v1' flag.
	(platform v1)
	(var Fs (require "fs"))

	% Use the definitions table to get the path to the example file we will use.
	(var SampleFile (+ (get-def __dirname) "/../index.js"))

	% Use the readFileSync method directly
	(var FsReadFileSync (dict-get Fs "readFileSync"))
	(print "readFileSync:" (inspect FsReadFileSync))
	% You can call FsReadFileSync using call/* (a parser-specific builtin.)
	(print "Read index.js:" (call FsReadFileSync SampleFile))

	% Now test using a callback and readFile
	(var FsReadFile (dict-get Fs "readFile"))
	(print "readFile:" (inspect FsReadFile))

	% js-bridge returns a native JavaScript function that, when called, invokes
	% the lithp interpreter with the given function definition, and sets all
	% provided parametes. Allows you to provide callbacks to JavaScript
	% functions as used below.
	(var Our_callback (js-bridge #Err,Data :: (
		(if (!= (null) Err) (
			(print "Failed to read file, err:  " Err)
		) (else (
			(print "Data from file:")
			(print (invoke Data "toString"))
		)))
	)))
	% You can call FsReadFile using call/* (a standard builtin.)
	(call FsReadFile SampleFile Our_callback)
	(call FsReadFile "non-existant" Our_callback)
)

