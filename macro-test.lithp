#!/usr/bin/env lithp-macro
% Test the preprocessor. See -m flag above.
(
	(import lists)
	(import match)
	(def fac #N :: (
		% { starts a (scope #) section.
		% } closes it.
		(when (tuple {== 0 N} {1})
		      (tuple {true}   {* N (fac (- N 1))})
		)
	))
	(print (fac 10))
	% [ starts a list.
	% ] closes it.
	(print [1 2 3 4])

	(def count-items-inner #Ele :: (
		(when
			(tuple {is-list Ele} {count-items Ele})
			(tuple {true}        {1})
		)
	))
	(def count-items #List :: ((foldl List 0 #I,A :: ((+ A (count-items-inner I))))))
	(print (count-items [1 2 [3 4 [5 6] 7] 8]))
)

